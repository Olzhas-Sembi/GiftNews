#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ–¥–∏–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from server.db import SessionLocal, NewsItem
import json

def check_media_in_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ–¥–∏–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–¥–∏–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    db = SessionLocal()
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ —Å –º–µ–¥–∏–∞
        news_with_media = db.query(NewsItem).filter(NewsItem.media.isnot(None)).limit(10).all()
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π —Å –º–µ–¥–∏–∞: {len(news_with_media)}")
        
        for i, news in enumerate(news_with_media[:5]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
            print(f"\nüì∞ –ù–æ–≤–æ—Å—Ç—å {i+1}: {news.title[:50]}...")
            print(f"   ID: {news.id}")
            print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {news.category}")
            print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫: {news.author}")
            
            if news.media:
                print(f"   üì∑ –ú–µ–¥–∏–∞: {json.dumps(news.media, indent=2, ensure_ascii=False)}")
            else:
                print("   ‚ùå –ú–µ–¥–∏–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                
            if news.image_url:
                print(f"   üñºÔ∏è Image URL: {news.image_url}")
            if news.video_url:
                print(f"   üé¨ Video URL: {news.video_url}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π
        total_news = db.query(NewsItem).count()
        news_with_media_count = db.query(NewsItem).filter(NewsItem.media.isnot(None)).count()
        
        print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –í—Å–µ–≥–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {total_news}")
        print(f"   –° –º–µ–¥–∏–∞: {news_with_media_count}")
        print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç —Å –º–µ–¥–∏–∞: {(news_with_media_count/total_news*100):.1f}%")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        categories = db.query(NewsItem.category).distinct().all()
        for category in categories:
            cat = category[0]
            if cat:
                total_in_cat = db.query(NewsItem).filter(NewsItem.category == cat).count()
                with_media_in_cat = db.query(NewsItem).filter(
                    NewsItem.category == cat,
                    NewsItem.media.isnot(None)
                ).count()
                print(f"   {cat.upper()}: {with_media_in_cat}/{total_in_cat} ({with_media_in_cat/total_in_cat*100:.1f}%)")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        db.close()

if __name__ == "__main__":
    check_media_in_database() 