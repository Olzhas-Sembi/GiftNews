#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
"""

import requests
import json
import time
from datetime import datetime

def test_server():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–µ—Ä"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–µ—Ä–∞
        response = requests.get("http://localhost:8000/health", timeout=10)
        if response.status_code == 200:
            print("‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
            health_data = response.json()
            print(f"   –°—Ç–∞—Ç—É—Å: {health_data.get('status')}")
            print(f"   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {health_data.get('database')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code}")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        response = requests.get("http://localhost:8000/api/stats/", timeout=10)
        if response.status_code == 200:
            stats = response.json()
            print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"   –í—Å–µ–≥–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {stats.get('total_news')}")
            print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {stats.get('categories')}")
            print(f"   –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {stats.get('last_updated')}")
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏
        response = requests.get("http://localhost:8000/api/news/?limit=5", timeout=10)
        if response.status_code == 200:
            news_data = response.json()
            print(f"\nüì∞ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ ({len(news_data.get('data', []))}):")
            
            for i, news in enumerate(news_data.get('data', [])[:3], 1):
                print(f"   {i}. {news.get('title', '')[:50]}...")
                print(f"      –ò—Å—Ç–æ—á–Ω–∏–∫: {news.get('source_name', 'N/A')}")
                print(f"      –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {news.get('category', 'N/A')}")
                print(f"      –î–∞—Ç–∞: {news.get('publish_date', 'N/A')}")
                if news.get('media'):
                    print(f"      –ú–µ–¥–∏–∞: {len(news.get('media', []))} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                print()
        
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def monitor_updates():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç"""
    
    print("\nüîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)...")
    print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    
    last_count = None
    
    try:
        while True:
            try:
                response = requests.get("http://localhost:8000/api/stats/", timeout=10)
                if response.status_code == 200:
                    stats = response.json()
                    current_count = stats.get('total_news', 0)
                    last_updated = stats.get('last_updated', 'N/A')
                    
                    if last_count is None:
                        print(f"üìä –ù–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {current_count}")
                        last_count = current_count
                    elif current_count > last_count:
                        print(f"üéâ –ù–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏! {last_count} ‚Üí {current_count} (+{current_count - last_count})")
                        print(f"   –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {last_updated}")
                        last_count = current_count
                    else:
                        print(f"‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞: {current_count} –Ω–æ–≤–æ—Å—Ç–µ–π (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)")
                    
                time.sleep(300)  # 5 –º–∏–Ω—É—Ç
                
            except KeyboardInterrupt:
                print("\nüõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                break
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
                time.sleep(60)  # –ñ–¥–µ–º –º–∏–Ω—É—Ç—É –ø—Ä–∏ –æ—à–∏–±–∫–µ
                
    except KeyboardInterrupt:
        print("\nüõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    test_server()
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ
    response = input("\n–•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π? (y/n): ")
    if response.lower() == 'y':
        monitor_updates()
    else:
        print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ") 