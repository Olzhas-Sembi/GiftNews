#!/usr/bin/env python3
"""
–û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –º–µ–¥–∏–∞
"""

import sys
import os
import asyncio

sys.path.append(os.path.join(os.path.dirname(__file__), 'server'))
from server.db import get_db_session, NewsItem, NewsSource

async def clear_and_update():
    """–û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –º–µ–¥–∏–∞"""
    print("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        with get_db_session() as session:
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ—Ç NextGen NFT
            nextgen_news = session.query(NewsItem).join(NewsItem.source).filter(
                NewsItem.source.has(name="NextGen NFT")
            ).all()
            
            deleted_count = len(nextgen_news)
            for item in nextgen_news:
                session.delete(item)
            
            session.commit()
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {deleted_count} –Ω–æ–≤–æ—Å—Ç–µ–π –æ—Ç NextGen NFT")
        
        print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π —Å –º–µ–¥–∏–∞...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
        from server.parsers.telegram_news_service import TelegramNewsService
        service = TelegramNewsService()
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç—ã –∏–∑ –∫–∞–Ω–∞–ª–∞
        print("üì° –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ –∏–∑ @nextgen_NFT...")
        posts = await service.fetch_telegram_channel('nextgen_NFT')
        
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(posts)} –ø–æ—Å—Ç–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ–¥–∏–∞
        media_posts = []
        for i, post in enumerate(posts):
            if post.get('media'):
                media_posts.append((i+1, post))
                print(f"üì∏ –ü–æ—Å—Ç #{i+1}: {post['media']}")
        
        print(f"üìä –ü–æ—Å—Ç–æ–≤ —Å –º–µ–¥–∏–∞: {len(media_posts)}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        print("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
        await service.save_to_database(posts)
        
        print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞...")
        with get_db_session() as session:
            nextgen_news = session.query(NewsItem).join(NewsItem.source).filter(
                NewsItem.source.has(name="NextGen NFT")
            ).all()
            
            print(f"üìä –í—Å–µ–≥–æ –Ω–æ–≤–æ—Å—Ç–µ–π –æ—Ç NextGen NFT: {len(nextgen_news)}")
            
            media_count = 0
            for item in nextgen_news:
                if item.media:
                    media_count += 1
                    print(f"   ‚úÖ ID {item.id}: {len(item.media)} –º–µ–¥–∏–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
            
            print(f"üì∏ –ù–æ–≤–æ—Å—Ç–µ–π —Å –º–µ–¥–∏–∞: {media_count}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(clear_and_update()) 