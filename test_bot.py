#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram –±–æ—Ç–∞
"""

import sys
import os
import requests
from datetime import datetime

sys.path.append(os.path.join(os.path.dirname(__file__), 'server'))
from server.bot import bot
from server.config import TOKEN

def test_bot_info():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ...")
    
    try:
        url = f"https://api.telegram.org/bot{TOKEN}/getMe"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            bot_info = response.json()
            result = bot_info.get("result", {})
            print(f"‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ–Ω:")
            print(f"   –ò–º—è: {result.get('first_name', 'N/A')}")
            print(f"   Username: @{result.get('username', 'N/A')}")
            print(f"   ID: {result.get('id', 'N/A')}")
            print(f"   –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç inline: {result.get('supports_inline_queries', False)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_webhook():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook"""
    print("\nüîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π webhook
        url = f"https://api.telegram.org/bot{TOKEN}/getWebhookInfo"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            webhook_info = response.json()
            result = webhook_info.get("result", {})
            
            print(f"üì° Webhook –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
            print(f"   URL: {result.get('url', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
            print(f"   –û–∂–∏–¥–∞—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {result.get('pending_update_count', 0)}")
            print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {result.get('last_error_message', '–ù–µ—Ç')}")
            
            if result.get('url'):
                print("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            else:
                print("‚ùå Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è webhook: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_bot_functions():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞"""
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–¥–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
        print("üì∞ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤–æ–¥–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π...")
        summary = bot.get_news_summary(3)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(summary)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: {summary[:50]}...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        print("\nüñºÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π NFT...")
        nft_news = bot.get_news_by_category("nft", 3)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(nft_news)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: {nft_news[:50]}...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
        stats = bot.get_news_stats()
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(stats)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: {stats[:50]}...")
        
        print("‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π: {e}")
        import traceback
        traceback.print_exc()

def test_api_endpoints():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints –±–æ—Ç–∞"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints...")
    
    try:
        base_url = "http://localhost:8000"
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º /telegram/bot-info
        print("üì° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /telegram/bot-info...")
        response = requests.get(f"{base_url}/telegram/bot-info", timeout=10)
        if response.status_code == 200:
            data = response.json()
            print(f"   –°—Ç–∞—Ç—É—Å: {data.get('status')}")
            if data.get('bot_info'):
                print(f"   –ë–æ—Ç: {data.get('bot_info', {}).get('first_name', 'N/A')}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º /telegram/send-news (–±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏)
        print("\nüì§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /telegram/send-news...")
        response = requests.post(f"{base_url}/telegram/send-news", 
                               json={"chat_id": 123456789, "news_id": None}, 
                               timeout=10)
        if response.status_code == 200:
            data = response.json()
            print(f"   –°—Ç–∞—Ç—É—Å: {data.get('status')}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞...")
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"üîë –¢–æ–∫–µ–Ω: {'–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if TOKEN else '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
    try:
        response = requests.get("http://localhost:8000/health", timeout=5)
        if response.status_code != 200:
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä —Å–Ω–∞—á–∞–ª–∞.")
            return
    except:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä —Å–Ω–∞—á–∞–ª–∞.")
        return
    
    print("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_bot_info()
    test_webhook()
    test_bot_functions()
    test_api_endpoints()
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main() 